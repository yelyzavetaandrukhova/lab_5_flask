/*
 Copyright (C) Federico Zivolo 2017
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */
(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module ? module.exports = t() :
    'function' == typeof define && define.amd ? define(t) : e.Popper = t();
})(this, function() {
  'use strict';

  function e(e) {
    return e && '[object Function]' === {}.toString.call(e);
  }

  function t(e, t) {
    if (1 !== e.nodeType) return [];
    var o = window.getComputedStyle(e, null);
    return t ? o[t] : o;
  }

  function o(e) {
    return 'HTML' === e.nodeName ? e : e.parentNode || e.host;
  }

  function n(e) {
    if (!e || -1 !== ['HTML', 'BODY', '#document'].indexOf(e.nodeName)) return window.document.body;
    var i = t(e),
      r = i.overflow,
      p = i.overflowX,
      s = i.overflowY;
    return /(auto|scroll)/.test(r + s + p) ? e : n(o(e));
  }

  function r(e) {
    var o = e && e.offsetParent,
      i = o && o.nodeName;
    return i && 'BODY' !== i && 'HTML' !== i ?
      -1 !== ['TD', 'TABLE'].indexOf(o.nodeName) && 'static' === t(o, 'position') ? r(o) : o :
      window.document.documentElement;
  }

  function p(e) {
    var t = e.nodeName;
    return 'BODY' !== t && ('HTML' === t || r(e.firstElementChild) === e);
  }

  function s(e) {
    return null === e.parentNode ? e : s(e.parentNode);
  }

  function d(e, t) {
    if (!e || !e.nodeType || !t || !t.nodeType) return window.document.documentElement;
    var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,
      i = o ? e : t,
      r = o ? t : e,
      p = document.createRange();
    p.setStart(i, 0), p.setEnd(r, 0);
    var s = p.commonAncestorContainer;
    if (e !== s && t !== s || i.contains(r)) return p;
    var a = s.host;
    return a ? d(a, t) : d(e, s.host);
  }

  function a(e) {
    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 'top',
      o = 'top' === t ? 'scrollTop' : 'scrollLeft',
      i = e.nodeName;
    if ('BODY' === i || 'HTML' === i) {
      var n = window.document.documentElement,
        r = window.document.scrollingElement || n;
      return r[o];
    }
    return e[o];
  }

  function f(e, t) {
    var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
      i = a(t, 'top'),
      n = a(t, 'left'),
      r = o ? -1 : 1;
    return e.top += i * r, e.bottom += i * r, e.left += n * r, e.right += n * r, e;
  }

  function l(e, t) {
    var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
      i = a(t, 'top'),
      n = a(t, 'left'),
      r = o ? -1 : 1;
    return e.top -= i * r, e.bottom -= i * r, e.left -= n * r, e.right -= n * r, e;
  }

  function m(e) {
    var t = window.document.body,
      o = window.document.documentElement,
      i = ie() && window.getComputedStyle(o);
    return {
      height: m('Height', t, o, i),
      width: m('Width', t, o, i)
    };
  }

  function h() {
    var e = window.document.body,
      t = window.document.documentElement,
      o = ie() && window.getComputedStyle(t);
    return {
      height: X(['height', 'paddingTop', 'paddingBottom', 'marginBottom'], o),
      width: X(['width', 'paddingLeft', 'paddingRight', 'marginLeft', 'marginRight'], o)
    };
  }

  function c(e) {
    var t = e.nodeName;
    if ('BODY' === t || 'HTML' === t) return !1;
    if ('fixed' === t) return !0;
    var o = t && r(e);
    return !!o && c(o);
  }

  function g(e) {
    if (!e || !e.parentElement || ie()) return window.document.documentElement;
    for (var t = e.parentElement; t && 'none' === t.style.display;) t = t.parentElement;
    return t || window.document.documentElement;
  }

  function u(e, t, o, i) {
    var n = 4 < arguments.length && void 0 !== arguments[4] && arguments[4],
      r = {
        top: 0,
        left: 0
      },
      p = n ? g(e) : d(e, o);
    if ('viewport' === i) r = b(p, n);
    else {
      var s = 'scrollParent' === i ? n ? n.parentNode : n : i,
        a = w(s);
      if ('HTML' === a.nodeName && !y(e)) {
        var f = m(),
          l = f.height,
          h = f.width;
        r.top += Math.max(0, Math.min(o.top - r.top, l - r.top - h)), r.left += Math.max(0, Math.min(o.left - r.left, h - r.left - l));
      } else r = b(a, n);
    }
    return r.left += t, r.top += t, r.right -= t, r.bottom -= t, r;
  }

  function b(e, t) {
    var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
      i = a(e, 'top'),
      n = a(e, 'left'),
      r = o ? -1 : 1;
    return e === window.document.documentElement && (n = 0, i = 0), {
      top: i + r,
      left: n + r,
      right: n - r,
      bottom: i - r
    };
  }

  function y(e) {
    return e === window.document.body || e === window.document.documentElement;
  }

  function w(e) {
    var t = e && e.offsetParent,
      o = t && t.nodeName;
    return o && 'BODY' !== o && 'HTML' !== o ? -1 !== ['TD', 'TABLE'].indexOf(t.nodeName) && 'static' === t.style.position ? w(t) : t : e ? e.ownerDocument.documentElement : window.document.documentElement;
  }

  function E(e) {
    var t = e.nodeName;
    return 'BODY' !== t && ('HTML' === t || w(e.firstElementChild) === e);
  }

  function v(e) {
    return null === e.parentNode ? e : v(e.parentNode);
  }

  function O(e, t) {
    if (!e || !e.nodeType || !t || !t.nodeType) return window.document.documentElement;
    var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,
      i = o ? e : t,
      r = o ? t : e,
      p = document.createRange();
    p.setStart(i, 0), p.setEnd(r, 0);
    var s = p.commonAncestorContainer;
    if (e !== s && t !== s || i.contains(r)) return E(s) ? s : w(s);
    var d = v(s);
    return d.host ? O(d.host, t) : O(e, v(t).host);
  }

  function L(e) {
    var t = window.getComputedStyle(e),
      o = parseFloat(t.marginTop) + parseFloat(t.marginBottom),
      i = parseFloat(t.marginLeft) + parseFloat(t.marginRight),
      n = {
        width: e.offsetWidth + i,
        height: e.offsetHeight + o
      };
    return n;
  }

  function x(e) {
    var t = {
      left: 'right',
      right: 'left',
      bottom: 'top',
      top: 'bottom'
    };
    return e.replace(/left|right|bottom|top/g, function(e) {
      return t[e];
    });
  }

  function P(e, t, o) {
    o = o.split('-');
    var i = o[0],
      n = o[1];
    e = -1 !== ['right', 'left'].indexOf(i) ? e : t;
    var r = -1 === ['top', 'left'].indexOf(i) ? 'border' : 'padding',
      p = -1 === ['bottom', 'left'].indexOf(i) ? 'border' : 'padding',
      s = -1 !== ['top', 'right'].indexOf(i) ? t : e,
      d = -1 === ['top', 'right'].indexOf(i) ? 'border' : 'padding',
      a = 'outset' === n ? 0 : 'inset' === n ? 1 : 2;
    return s[r + i] = a, s[p + i] = a, s[d + x(i) + n] = a, s;
  }

  function S(e, t, o) {
    var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
      n = N(t),
      r = 'HTML' === n,
      p = b(e, r),
      s = L(t),
      d = L(e),
      a = n && E(e),
      f = {
        top: p.top - d.top - s.marginTop,
        left: p.left - d.left - s.marginLeft
      };
    if (a || !i) return f;
    var l = h(),
      m = l.height,
      c = l.width;
    return f.bottom = m - (p.top - d.top), f.right = c - (p.left - d.left), f;
  }

  function T(e, t, o) {
    var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
      n = N(t),
      r = 'HTML' === n,
      p = b(e, r),
      s = L(t),
      d = {
        width: s.width,
        height: s.height
      },
      a = -1 !== ['right', 'left'].indexOf(o),
      f = a ? 'top' : 'left',
      l = a ? 'left' : 'top',
      m = a ? 'height' : 'width',
      h = a ? 'width' : 'height';
    if (d[m] < p[f]) {
      var c = t.style;
      c[f] = d[m] + s.marginTop + 'px';
    }
    if (d[m] < p[f] + p[h]) {
      var g = t.style;
      g[f] = d[m] - s.marginBottom + 'px';
    }
    if (d[h] < p[l]) {
      var u = t.style;
      u[l] = d[h] + s.marginLeft + 'px';
    }
    if (d[h] < p[l] + p[m]) {
      var O = t.style;
      O[l] = d[h] - s.marginRight + 'px';
    }
    if (i) {
      var x = parseFloat(t.style[l]),
        P = parseFloat(t.style[f]),
        S = d[m] - s.marginTop - s.marginBottom,
        T = d[h] - s.marginLeft - s.marginRight;
      x = Math.min(x, S), P = Math.min(P, T), x = Math.max(x, 0), P = Math.max(P, 0), t.style[l] = x + 'px', t.style[f] = P + 'px';
    }
    return t;
  }

  function C(e) {
    return e.split('-')[1];
  }

  function D(e) {
    var t = e.ownerDocument.defaultView.getComputedStyle(e),
      o = parseFloat(t.marginTop) + parseFloat(t.marginBottom),
      i = parseFloat(t.marginLeft) + parseFloat(t.marginRight);
    return {
      width: e.offsetWidth + i,
      height: e.offsetHeight + o
    };
  }

  function N(e) {
    return e.nodeName === 'HTML' ? e : e.parentNode || e.host;
  }

  function M(e) {
    if (!e) return window.document.body;
    switch (e.nodeName) {
      case 'HTML':
      case 'BODY':
        return e.ownerDocument.body;
      case '#document':
        return e.body;
    }
    var t = t(e),
      o = t.overflow,
      i = t.overflowX,
      n = t.overflowY;
    return /(auto|scroll|overlay)/.test(o + n + i) ? e : M(o(e));
  }

  function z(e) {
    return e && e.referenceNode ? e.referenceNode : e;
  }

  function H(e) {
    return 11 === e ? Z : 10 === e ? B : Z || B;
  }

  function R(e) {
    if (!e) return window.document.documentElement;
    for (var o = H(10) ? window.document.body : null, i = e.offsetParent || null; i === o && e.nextElementSibling;) i = (e = e.nextElementSibling).offsetParent;
    var n = i && i.nodeName;
    return n && 'BODY' !== n && 'HTML' !== n ? -1 !== ['TD', 'TABLE'].indexOf(i.nodeName) && 'static' === t(i, 'position') ?
